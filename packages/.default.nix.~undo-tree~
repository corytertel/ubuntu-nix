(undo-tree-save-format-version . 1)
"f04207bfeb019d427b633a476ce3cc1a7e4b0cce"
[nil nil nil nil (25400 55209 360350 167000) 0 nil]
([nil nil ((168 . 173) (t 25400 54840 528059 131000)) nil (25400 55209 360349 318000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -173) (nil rear-nonsticky nil 213 . 214) (nil fontified nil 213 . 214) (nil fontified nil 212 . 213) (nil fontified nil 211 . 212) (nil fontified nil 210 . 211) (nil fontified nil 206 . 210) (nil fontified nil 205 . 206) (nil fontified nil 198 . 205) (nil fontified nil 197 . 198) (nil fontified nil 196 . 197) (nil fontified nil 181 . 196) (nil fontified nil 175 . 181) (nil fontified nil 174 . 175) (nil fontified nil 173 . 174) (173 . 214)) nil (25400 55209 360345 649000) 0 nil])
([nil nil ((3 . 4) (t 25400 55224 571726 244000)) nil (25400 55238 92682 683000) 0 nil])
([nil nil ((#("," 0 1 (face tree-sitter-hl-face:punctuation\.delimiter ws-butler-chg chg fontified t)) . -3) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) 4) nil (25400 55238 92681 834000) 0 nil])
([nil nil ((3 . 6)) nil (25400 55238 92678 726000) 0 nil])
([nil nil ((#("k" 0 1 (face (tree-sitter-hl-face:variable\.parameter tree-sitter-hl-face:property tree-sitter-hl-face:variable) ws-butler-chg chg fontified t)) . -5) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) 6) nil (25400 55238 92677 819000) 0 nil])
([nil nil ((5 . 8)) nil (25400 55238 92653 38000) 0 nil])
([nil nil ((#("    (import (builtins.fetchTarball {
      url = https://github.com/nix-community/emacs-overlay/archive/master.tar.gz;
    }))" 0 4 (fontified t) 4 5 (face (rainbow-delimiters-depth-3-face tree-sitter-hl-face:punctuation\.bracket) fontified t) 5 11 (face (tree-sitter-hl-face:function\.builtin tree-sitter-hl-face:function tree-sitter-hl-face:variable tree-sitter-hl-face:property) fontified t) 11 12 (fontified t) 12 13 (face (rainbow-delimiters-depth-4-face tree-sitter-hl-face:punctuation\.bracket) fontified t) 13 21 (face (tree-sitter-hl-face:variable\.builtin tree-sitter-hl-face:variable tree-sitter-hl-face:property) fontified t) 21 22 (face tree-sitter-hl-face:punctuation\.delimiter fontified t) 22 34 (face (tree-sitter-hl-face:function\.builtin tree-sitter-hl-face:property tree-sitter-hl-face:function tree-sitter-hl-face:variable) fontified t) 34 35 (fontified t) 35 36 (face (rainbow-delimiters-depth-5-face tree-sitter-hl-face:punctuation\.bracket) fontified t) 36 37 (fontified t) 37 43 (face (whitespace-line) fontified t) 43 46 (face (whitespace-line tree-sitter-hl-face:property tree-sitter-hl-face:variable) fontified t) 46 47 (face (whitespace-line) fontified t) 47 48 (face (whitespace-line tree-sitter-hl-face:punctuation\.delimiter) fontified t) 48 117 (face (whitespace-line) fontified t) 117 118 (face (whitespace-line tree-sitter-hl-face:punctuation\.delimiter) fontified t) 118 119 (fontified t) 119 123 (fontified t) 123 124 (face (rainbow-delimiters-depth-5-face tree-sitter-hl-face:punctuation\.bracket) fontified t) 124 125 (face (rainbow-delimiters-depth-4-face tree-sitter-hl-face:punctuation\.bracket) fontified t) 125 126 (face (rainbow-delimiters-depth-3-face tree-sitter-hl-face:punctuation\.bracket) fontified t)) . 47) (undo-tree-id87 . -126) (undo-tree-id88 . -6) (undo-tree-id89 . -6) (undo-tree-id90 . -44) (undo-tree-id91 . -44) (undo-tree-id92 . -126) (undo-tree-id93 . -123) (undo-tree-id94 . -124) (undo-tree-id95 . -35) (undo-tree-id96 . -36) (undo-tree-id97 . -126) (undo-tree-id98 . -125) (undo-tree-id99 . -126) (undo-tree-id100 . -125) (undo-tree-id101 . -126) (undo-tree-id102 . -125) (undo-tree-id103 . -126) (undo-tree-id104 . -125) (undo-tree-id105 . -126) (undo-tree-id106 . -125) (undo-tree-id107 . -126) (undo-tree-id108 . -125) (undo-tree-id109 . -126) (undo-tree-id110 . -124) (undo-tree-id111 . -125) (undo-tree-id112 . -12) (undo-tree-id113 . -13) (undo-tree-id114 . -4) (undo-tree-id115 . -5) (undo-tree-id116 . -126) (undo-tree-id117 . -125) (undo-tree-id118 . -126) (undo-tree-id119 . -125) (undo-tree-id120 . -126) (undo-tree-id121 . -125) (undo-tree-id122 . -126) (undo-tree-id123 . -125) (undo-tree-id124 . -126) (undo-tree-id125 . -125) (undo-tree-id126 . -126) (undo-tree-id127 . -125) (undo-tree-id128 . -126) (undo-tree-id129 . -124) (undo-tree-id130 . -125) (undo-tree-id131 . -12) (undo-tree-id132 . -13) (undo-tree-id133 . -4) (undo-tree-id134 . -5) (undo-tree-id135 . -126) (undo-tree-id136 . -126) (undo-tree-id137 . -126) (undo-tree-id138 . -126) (undo-tree-id139 . -125) (undo-tree-id140 . -126) (undo-tree-id141 . -125) (undo-tree-id142 . -126) (undo-tree-id143 . -125) (undo-tree-id144 . -126) (undo-tree-id145 . -125) (undo-tree-id146 . -126) (undo-tree-id147 . -125) (undo-tree-id148 . -126) (undo-tree-id149 . -125) (undo-tree-id150 . -126) (undo-tree-id151 . -124) (undo-tree-id152 . -125) (undo-tree-id153 . -12) (undo-tree-id154 . -13) (undo-tree-id155 . -4) (undo-tree-id156 . -5) (undo-tree-id157 . -126) (undo-tree-id158 . -44) (undo-tree-id159 . -6) (undo-tree-id160 . -6) (t 25400 55238 95872 22000)) nil (25400 55243 267228 396000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -46) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) 47) nil (25400 55243 267119 181000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -61) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (#("i" 0 1 (fontified t)) . -62) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (#("s" 0 1 (fontified t)) . -63) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (#("c" 0 1 (fontified t)) . -64) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (#("o" 0 1 (fontified t)) . -65) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (#("r" 0 1 (fontified t)) . -66) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (#("d" 0 1 (fontified t)) . -67) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (#("." 0 1 (fontified t)) . -68) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (#("n" 0 1 (fontified t)) . -69) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (#("i" 0 1 (fontified t)) . -70) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (#("x" 0 1 (fontified t)) . -71) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) 72 (t 25400 55243 267927 632000)) nil (25400 55253 61432 146000) 0 nil])
([nil nil ((#("/" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -60) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) 61) nil (25400 55253 61351 248000) 0 nil])
([nil nil ((60 . 61)) nil (25400 55253 61334 257000) 0 nil])
([nil nil ((61 . 74)) nil (25400 55253 61333 876000) 0 nil])
([nil nil ((75 . 81) (#(" " 0 1 (ws-butler-chg delete fontified nil)) . 75) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . 1) (undo-tree-id175 . 1) (undo-tree-id176 . 1) (undo-tree-id177 . 1) (undo-tree-id178 . 1) (undo-tree-id179 . 1) (undo-tree-id180 . 1) (undo-tree-id181 . 1) (undo-tree-id182 . 1) (undo-tree-id183 . 1) (undo-tree-id184 . 1) (undo-tree-id185 . 1) (undo-tree-id186 . 1) (undo-tree-id187 . 1) (74 . 75)) nil (25400 55253 61332 593000) 0 nil])
([nil nil ((74 . 75) (#("      " 0 1 (ws-butler-chg delete fontified nil) 1 6 (ws-butler-chg chg fontified nil)) . 74) (undo-tree-id161 . -6) (undo-tree-id162 . 6) (undo-tree-id163 . -6) (undo-tree-id164 . -6) (undo-tree-id165 . -6) (#("
" 0 1 (ws-butler-chg chg fontified t)) . -74) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . 1) (undo-tree-id170 . -1) 81) nil (25400 55253 61204 721000) 0 nil])
([nil nil ((85 . 89) (t 25400 55253 68032 789000)) nil (25400 55259 675511 307000) 0 nil])
([nil nil ((46 . 51) (t 25400 55257 500080 247000)) nil (25400 55271 586470 626000) 0 nil] [nil nil ((#("    (import ./nf-oxygen.nix { inherit lib pkgs; })" 0 4 (fontified t) 4 5 (face (rainbow-delimiters-depth-3-face tree-sitter-hl-face:punctuation\.bracket) fontified t) 5 11 (face (tree-sitter-hl-face:function\.builtin tree-sitter-hl-face:function tree-sitter-hl-face:variable tree-sitter-hl-face:property) fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 27 (fontified t) 27 28 (fontified t) 28 29 (face (rainbow-delimiters-depth-4-face tree-sitter-hl-face:punctuation\.bracket) fontified t) 29 30 (fontified t) 30 37 (face tree-sitter-hl-face:keyword fontified t) 37 38 (fontified t) 38 41 (face (tree-sitter-hl-face:property tree-sitter-hl-face:variable) fontified t) 41 42 (fontified t) 42 46 (face (tree-sitter-hl-face:property tree-sitter-hl-face:variable) fontified t) 46 47 (face tree-sitter-hl-face:punctuation\.delimiter fontified t) 47 48 (fontified t) 48 49 (face (rainbow-delimiters-depth-4-face tree-sitter-hl-face:punctuation\.bracket) fontified t) 49 50 (face (rainbow-delimiters-depth-3-face tree-sitter-hl-face:punctuation\.bracket) rear-nonsticky t fontified t)) . 47) (undo-tree-id368 . -4) (undo-tree-id369 . -4) (undo-tree-id370 . -4) (undo-tree-id371 . -14) (undo-tree-id372 . -4) (undo-tree-id373 . -42) (undo-tree-id374 . -42) (undo-tree-id375 . -42) (undo-tree-id376 . -42) (undo-tree-id377 . -50) (t 25400 55257 500080 247000)) ((nil ws-butler-chg delete 97 . 98) (47 . 97)) (25400 55259 675141 175000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t ws-butler-chg chg)) . -51) (nil fontified nil 100 . 101) (nil fontified nil 99 . 100) (nil fontified nil 98 . 99) (nil fontified nil 97 . 98) (nil fontified nil 93 . 97) (nil fontified nil 92 . 93) (nil fontified nil 89 . 92) (nil fontified nil 88 . 89) (nil fontified nil 81 . 88) (nil fontified nil 80 . 81) (nil fontified nil 79 . 80) (nil fontified nil 78 . 79) (nil fontified nil 64 . 78) (nil fontified nil 63 . 64) (nil fontified nil 62 . 63) (nil fontified nil 56 . 62) (nil fontified nil 55 . 56) (nil fontified nil 51 . 55) (51 . 101)) nil (25400 55271 586469 603000) 0 nil])
nil
([nil nil ((#("i" 0 1 (fontified t)) . -123) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (#("x" 0 1 (fontified t)) . -124) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) 125) nil (25400 55271 586467 216000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -112) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (#("f" 0 1 (fontified t)) . -113) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (#("-" 0 1 (fontified t)) . -114) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (#("o" 0 1 (fontified t)) . -115) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (#("x" 0 1 (fontified t)) . -116) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (#("y" 0 1 (fontified t)) . -117) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (#("g" 0 1 (fontified t)) . -118) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (#("e" 0 1 (fontified t)) . -119) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (#("n" 0 1 (fontified t)) . -120) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (#("." 0 1 (fontified t)) . -121) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (#("n" 0 1 (fontified t)) . -122) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) 123) nil (25400 55271 586454 767000) 0 nil])
([nil nil ((112 . 113)) nil (25400 55271 586001 159000) 0 nil])
([nil nil ((114 . 125) (113 . 114)) nil (25400 55271 586000 474000) 0 nil])
([nil nil ((125 . 126)) nil (25400 55271 585999 673000) 0 nil])
([nil nil ((126 . 129)) nil (25400 55271 585995 735000) 0 nil])
([nil nil ((46 . 51) (t 25400 55271 592230 790000)) nil (25400 55291 286721 329000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t ws-butler-chg chg)) . -51) (nil fontified nil 100 . 101) (nil fontified nil 99 . 100) (nil fontified nil 98 . 99) (nil fontified nil 97 . 98) (nil fontified nil 93 . 97) (nil fontified nil 92 . 93) (nil fontified nil 89 . 92) (nil fontified nil 88 . 89) (nil fontified nil 81 . 88) (nil fontified nil 80 . 81) (nil fontified nil 79 . 80) (nil fontified nil 78 . 79) (nil fontified nil 64 . 78) (nil fontified nil 63 . 64) (nil fontified nil 62 . 63) (nil fontified nil 56 . 62) (nil fontified nil 55 . 56) (nil fontified nil 51 . 55) (51 . 101)) nil (25400 55291 286720 437000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t ws-butler-chg chg)) . -61) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (#("f" 0 1 (fontified t ws-butler-chg chg)) . -62) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (#("-" 0 1 (fontified t ws-butler-chg chg)) . -63) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg)) . -64) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (#("x" 0 1 (fontified t ws-butler-chg chg)) . -65) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (#("y" 0 1 (fontified t ws-butler-chg chg)) . -66) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (#("g" 0 1 (fontified t ws-butler-chg chg)) . -67) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -68) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg)) . -69) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (#("." 0 1 (fontified t ws-butler-chg chg)) . -70) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg)) . -71) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -72) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (#("x" 0 1 (fontified t ws-butler-chg chg)) . -73) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) 74) nil (25400 55291 286712 594000) 0 nil])
([nil nil ((61 . 62)) nil (25400 55291 286237 634000) 0 nil])
([nil nil ((64 . 73) (62 . 64) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -62) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) 63 (62 . 63)) nil (25400 55291 286236 333000) 0 nil])
([nil nil ((73 . 74)) nil (25400 55291 286225 620000) 0 nil])
([nil nil ((75 . 77) (74 . 75)) nil (25400 55291 286221 613000) 0 nil])
([nil nil ((46 . 51) (t 25400 55291 296440 377000)) nil (25400 55314 702580 751000) 0 nil])
([nil nil ((nil rear-nonsticky nil 97 . 98) (nil fontified nil 97 . 98) (nil fontified nil 96 . 97) (nil fontified nil 95 . 96) (nil fontified nil 94 . 95) (nil fontified nil 90 . 94) (nil fontified nil 89 . 90) (nil fontified nil 82 . 89) (nil fontified nil 81 . 82) (nil fontified nil 80 . 81) (nil fontified nil 58 . 80) (nil fontified nil 52 . 58) (nil fontified nil 51 . 52) (51 . 98)) nil (25400 55314 702576 927000) 0 nil])
([nil nil ((208 . 209) (t 25400 55314 704688 7000)) nil (25400 55554 397926 413000) 0 nil])
([nil nil ((157 . 158) (apply deactivate-cursor-after-undo 6)) nil (25400 55554 397926 29000) 0 nil])
([nil nil ((103 . 104) (apply deactivate-cursor-after-undo 7) (apply activate-cursor-for-undo 6)) nil (25400 55554 397925 152000) 0 nil])
([nil nil ((51 . 52) (apply deactivate-cursor-after-undo 8) (apply activate-cursor-for-undo 7)) nil (25400 55554 397924 505000) 0 nil])
([nil nil ((apply activate-cursor-for-undo 8)) nil (25400 55554 397923 670000) 0 nil])
([nil nil ((apply activate-cursor-for-undo 8) (#("$" 0 1 (ws-butler-chg chg fontified t)) . -51) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (apply deactivate-cursor-after-undo 8) (apply activate-cursor-for-undo 7) (#("$" 0 1 (ws-butler-chg chg fontified t)) . -104) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (apply deactivate-cursor-after-undo 7) (apply activate-cursor-for-undo 6) (#("$" 0 1 (ws-butler-chg chg fontified t)) . -159) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (apply deactivate-cursor-after-undo 6) (#("$" 0 1 (ws-butler-chg chg fontified t)) . -211) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) 212) nil (25400 55554 397921 729000) 0 nil])
([nil nil ((apply activate-cursor-for-undo 8) (52 . 53) (apply deactivate-cursor-after-undo 8) (apply activate-cursor-for-undo 7) (105 . 106) (apply deactivate-cursor-after-undo 7) (apply activate-cursor-for-undo 6) (160 . 161) (apply deactivate-cursor-after-undo 6) (212 . 213) (apply activate-cursor-for-undo 8) (51 . 52) (apply deactivate-cursor-after-undo 8) (apply activate-cursor-for-undo 7) (103 . 104) (apply deactivate-cursor-after-undo 7) (apply activate-cursor-for-undo 6) (157 . 158) (apply deactivate-cursor-after-undo 6) (208 . 209)) nil (25400 55554 397893 20000) 0 nil])
([nil nil ((apply activate-cursor-for-undo 18) (#("#" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -51) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (apply deactivate-cursor-after-undo 18) (apply activate-cursor-for-undo 17) (#("#" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -104) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (apply deactivate-cursor-after-undo 17) (apply activate-cursor-for-undo 16) (#("#" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -159) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (apply deactivate-cursor-after-undo 16) (#("#" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -211) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (apply activate-cursor-for-undo 18) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -52) (undo-tree-id914 . -1) (apply deactivate-cursor-after-undo 18) (apply activate-cursor-for-undo 17) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -106) (undo-tree-id915 . -1) (apply deactivate-cursor-after-undo 17) (apply activate-cursor-for-undo 16) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -162) (undo-tree-id916 . -1) (apply deactivate-cursor-after-undo 16) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -215) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) 216 (t 25400 55554 403153 636000)) nil (25400 55958 206929 86000) 0 nil])
([nil nil ((46 . 51) (t 25400 55958 207115 62000)) nil (25400 56079 626924 226000) 0 nil])
([nil nil ((#("    " 0 4 (ws-butler-chg chg fontified nil)) . -335) (#("    " 0 4 (ws-butler-chg chg fontified nil)) . -284) (#("    " 0 4 (ws-butler-chg chg fontified nil)) . -230) (#("    " 0 4 (ws-butler-chg chg fontified nil)) . -178) (#("    " 0 4 (fontified nil ws-butler-chg chg)) . -170) (undo-tree-id938 . -3) (undo-tree-id939 . -3) (#("    " 0 4 (fontified t ws-butler-chg chg)) . -51) (351 . 359) (#("    " 0 4 (fontified t)) . 351) (undo-tree-id940 . -4) (undo-tree-id941 . -4) (296 . 304) (#("    " 0 4 (fontified t)) . 296) (undo-tree-id942 . -4) (238 . 246) (#("    " 0 4 (fontified t)) . 238) (undo-tree-id943 . -4) (undo-tree-id944 . -4) (undo-tree-id945 . -4) (undo-tree-id946 . -4) (undo-tree-id947 . -4) (undo-tree-id948 . -4) (undo-tree-id949 . -4) (undo-tree-id950 . -4) (182 . 190) (#("    " 0 4 (fontified t)) . 182) (undo-tree-id951 . -4) (undo-tree-id952 . -4) (170 . 178) (#("    " 0 4 (fontified t ws-butler-chg chg)) . 170) (nil rear-nonsticky nil 176 . 177) (nil fontified nil 176 . 177) (nil fontified nil 175 . 176) (nil fontified nil 174 . 175) (nil fontified nil 170 . 174) (nil fontified nil 169 . 170) (nil fontified nil 168 . 169) (nil fontified nil 99 . 168) (nil fontified nil 98 . 99) (nil fontified nil 97 . 98) (nil fontified nil 94 . 97) (nil fontified nil 92 . 94) (nil fontified nil 88 . 92) (nil fontified nil 87 . 88) (nil fontified nil 86 . 87) (nil fontified nil 85 . 86) (nil fontified nil 73 . 85) (nil fontified nil 72 . 73) (nil fontified nil 64 . 72) (nil fontified nil 63 . 64) (nil fontified nil 62 . 63) (nil fontified nil 56 . 62) (nil fontified nil 55 . 56) (nil fontified nil 51 . 55) (51 . 177)) nil (25400 56079 626919 105000) 0 nil])
([nil nil ((279 . 284) (t 25400 56079 636277 894000)) nil (25400 56152 470881 819000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t ws-butler-chg chg)) . -284) (nil rear-nonsticky nil 327 . 328) (nil fontified nil 327 . 328) (nil fontified nil 326 . 327) (nil fontified nil 325 . 326) (nil fontified nil 324 . 325) (nil fontified nil 320 . 324) (nil fontified nil 319 . 320) (nil fontified nil 312 . 319) (nil fontified nil 311 . 312) (nil fontified nil 310 . 311) (nil fontified nil 295 . 310) (nil fontified nil 289 . 295) (nil fontified nil 288 . 289) (nil fontified nil 284 . 288) (284 . 328)) nil (25400 56152 470876 916000) 0 nil])
([nil nil ((#("    (import ./chicken-lsp-server { inherit pkgs; })" 0 4 (fontified t) 4 5 (fontified t face (rainbow-delimiters-depth-3-face tree-sitter-hl-face:punctuation\.bracket)) 5 11 (fontified t face (tree-sitter-hl-face:function\.builtin tree-sitter-hl-face:function tree-sitter-hl-face:variable tree-sitter-hl-face:property)) 11 33 (fontified t) 33 34 (fontified t face (rainbow-delimiters-depth-4-face tree-sitter-hl-face:punctuation\.bracket)) 34 35 (fontified t) 35 42 (fontified t face tree-sitter-hl-face:keyword) 42 43 (fontified t) 43 47 (fontified t face (tree-sitter-hl-face:property tree-sitter-hl-face:variable)) 47 48 (fontified t face tree-sitter-hl-face:punctuation\.delimiter) 48 49 (fontified t) 49 50 (fontified t face (rainbow-delimiters-depth-4-face tree-sitter-hl-face:punctuation\.bracket)) 50 51 (fontified t face (rainbow-delimiters-depth-3-face tree-sitter-hl-face:punctuation\.bracket))) . 174) (undo-tree-id9 . -43) (undo-tree-id10 . -43) (undo-tree-id11 . -43) (undo-tree-id12 . -51) (t 25400 56152 476971 237000)) nil (25400 56669 340920 543000) 0 nil])
([nil current ((#("
" 0 1 (fontified t)) . -173) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) 174) nil (25400 56669 340912 183000) 0 nil])
nil
