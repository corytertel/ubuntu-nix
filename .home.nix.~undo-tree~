(undo-tree-save-format-version . 1)
"d35e979d70d45113544f09d15899f60c88b37f13"
[nil nil nil nil (25400 58000 599815 404000) 0 nil]
([nil nil ((72 . 77) (t 25400 57780 372734 528000)) nil (25400 58131 598510 451000) 0 nil])
([nil nil ((77 . 79)) nil (25400 58131 598509 641000) 0 nil])
([nil nil ((79 . 84)) nil (25400 58131 598508 759000) 0 nil])
([nil nil ((#("/" 0 1 (fontified nil ws-butler-chg chg)) . -83) (undo-tree-id0 . -1) 84) nil (25400 58131 598505 447000) 0 nil])
([nil nil ((457 . 462) (t 25400 58131 608179 837000)) nil (25400 59619 769285 283000) 0 nil])
([nil nil ((459 . 463) (#("    " 0 4 (ws-butler-chg chg fontified nil)) . 458) (undo-tree-id65 . -4) (462 . 463)) nil (25400 59619 769284 571000) 0 nil])
([nil nil ((463 . 464)) nil (25400 59619 769282 69000) 0 nil])
([nil nil ((467 . 473) (465 . 467) (#("o" 0 1 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:property) ws-butler-chg chg fontified t)) . -465) (undo-tree-id63 . -1) (undo-tree-id64 . -1) 466 (464 . 466)) nil (25400 59619 769281 193000) 0 nil])
([nil nil ((473 . 475)) nil (25400 59619 769279 392000) 0 nil])
([nil nil ((475 . 477)) nil (25400 59619 769279 166000) 0 nil])
([nil nil ((#("i" 0 1 (face (tree-sitter-hl-face:property tree-sitter-hl-face:variable) ws-butler-chg chg fontified t)) . -475) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (#("n" 0 1 (face (tree-sitter-hl-face:property tree-sitter-hl-face:variable) ws-butler-chg chg fontified t)) . -476) (undo-tree-id62 . -1) 477) nil (25400 59619 769278 487000) 0 nil])
([nil nil ((475 . 476)) nil (25400 59619 769276 719000) 0 nil])
([nil nil ((476 . 480)) nil (25400 59619 769276 361000) 0 nil])
([nil nil ((#("l" 0 1 (face (tree-sitter-hl-face:property tree-sitter-hl-face:variable) ws-butler-chg chg fontified t)) . -477) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (#("o" 0 1 (face (tree-sitter-hl-face:property tree-sitter-hl-face:variable) ws-butler-chg chg fontified t)) . -478) (undo-tree-id58 . -1) (#("s" 0 1 (face (tree-sitter-hl-face:property tree-sitter-hl-face:variable) ws-butler-chg chg fontified t)) . -479) (undo-tree-id59 . -1) 480) nil (25400 59619 769275 269000) 0 nil])
([nil nil ((477 . 478)) nil (25400 59619 769273 105000) 0 nil])
([nil nil ((#("l" 0 1 (face (tree-sitter-hl-face:property tree-sitter-hl-face:variable) ws-butler-chg chg fontified t)) . -477) (undo-tree-id55 . -1) 478) nil (25400 59619 769272 641000) 0 nil])
([nil nil ((477 . 478)) nil (25400 59619 769271 835000) 0 nil])
([nil nil ((#("o" 0 1 (face (tree-sitter-hl-face:property tree-sitter-hl-face:variable) ws-butler-chg chg fontified t)) . -477) (undo-tree-id54 . -1) 478) nil (25400 59619 769271 440000) 0 nil])
([nil nil ((477 . 481)) nil (25400 59619 769270 692000) 0 nil])
([nil nil ((481 . 486)) nil (25400 59619 769270 344000) 0 nil])
([nil nil ((486 . 487)) nil (25400 59619 769269 952000) 0 nil])
([nil nil ((487 . 496)) nil (25400 59619 769269 504000) 0 nil])
([nil nil ((496 . 498)) nil (25400 59619 769269 75000) 0 nil])
([nil nil ((498 . 499)) nil (25400 59619 769268 645000) 0 nil])
([nil nil ((#("," 0 1 (face tree-sitter-hl-face:punctuation\.delimiter ws-butler-chg chg fontified t)) . -498) (undo-tree-id53 . -1) 499) nil (25400 59619 769268 75000) 0 nil])
([nil nil ((498 . 499)) nil (25400 59619 769267 249000) 0 nil])
([nil nil ((#("w" 0 1 (face (tree-sitter-hl-face:property tree-sitter-hl-face:variable) ws-butler-chg chg fontified t)) . -498) (undo-tree-id52 . -1) 499) nil (25400 59619 769266 683000) 0 nil])
([nil nil ((498 . 505)) nil (25400 59619 769265 920000) 0 nil])
([nil nil ((505 . 510)) nil (25400 59619 769265 510000) 0 nil])
([nil nil ((510 . 511)) nil (25400 59619 769265 65000) 0 nil])
([nil nil ((512 . 520) (511 . 512)) nil (25400 59619 769264 640000) 0 nil])
([nil nil ((520 . 522)) nil (25400 59619 769264 159000) 0 nil])
([nil nil ((#("i" 0 1 (face (tree-sitter-hl-face:property tree-sitter-hl-face:variable) ws-butler-chg chg fontified t)) . -521) (undo-tree-id50 . -1) (undo-tree-id51 . -1) 522) nil (25400 59619 769263 516000) 0 nil])
([nil nil ((521 . 522)) nil (25400 59619 769260 139000) 0 nil])
([nil nil ((522 . 525)) nil (25400 59619 769259 726000) 0 nil])
([nil nil ((#("p" 0 1 (face (tree-sitter-hl-face:property tree-sitter-hl-face:variable) ws-butler-chg chg fontified t)) . -523) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (#("l" 0 1 (face (tree-sitter-hl-face:property tree-sitter-hl-face:variable) ws-butler-chg chg fontified t)) . -524) (undo-tree-id48 . -1) (undo-tree-id49 . -1) 525) nil (25400 59619 769258 932000) 0 nil])
([nil nil ((523 . 524)) nil (25400 59619 769255 510000) 0 nil])
([nil nil ((#("s" 0 1 (face (tree-sitter-hl-face:property tree-sitter-hl-face:variable) ws-butler-chg chg fontified t)) . -523) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) 524) nil (25400 59619 769254 880000) 0 nil])
([nil nil ((523 . 524)) nil (25400 59619 769252 919000) 0 nil])
([nil nil ((524 . 528)) nil (25400 59619 769252 435000) 0 nil])
([nil nil ((530 . 534) (#("    " 0 4 (ws-butler-chg chg fontified nil)) . 529) (undo-tree-id37 . -4) (undo-tree-id38 . -4) (undo-tree-id39 . -4) (undo-tree-id40 . -4) (528 . 534)) nil (25400 59619 769251 606000) 0 nil])
([nil nil ((#("    " 0 1 (ws-butler-chg delete fontified nil) 1 4 (ws-butler-chg chg fontified nil)) . 529) (undo-tree-id29 . -4) (undo-tree-id30 . 4) (undo-tree-id31 . -4) (undo-tree-id32 . -4) (undo-tree-id33 . -4) (undo-tree-id34 . -4) (#("
" 0 1 (ws-butler-chg delete fontified t)) . -529) (undo-tree-id35 . 1) (undo-tree-id36 . -1) 534) nil (25400 59619 769248 865000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t)) . -528) (undo-tree-id17 . -1) (undo-tree-id18 . 1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) 529) nil (25400 59619 769244 355000) 0 nil])
([nil nil ((528 . 533)) nil (25400 59619 769237 666000) 0 nil])
([nil nil ((#("discord" 0 7 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:property) fontified t)) . 450) (undo-tree-id16 . -7)) nil (25400 59619 769237 60000) 0 nil])
([nil nil ((nil rear-nonsticky nil 537 . 538) (nil fontified nil 531 . 538) (531 . 538)) nil (25400 59619 769235 848000) 0 nil])
([nil nil ((#("    " 0 1 (ws-butler-chg delete fontified nil) 1 4 (fontified nil)) . 445) (undo-tree-id5 . -4) (undo-tree-id6 . -4) (undo-tree-id7 . -4) (undo-tree-id8 . -4) (undo-tree-id9 . -4) (undo-tree-id10 . -4) (undo-tree-id11 . -4) (#("
" 0 1 (fontified t)) . -445) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) 450) nil (25400 59619 769234 49000) 0 nil])
([nil nil ((#("discord" 0 6 (face (tree-sitter-hl-face:property tree-sitter-hl-face:variable) fontified t ws-butler-chg chg) 6 7 (face (tree-sitter-hl-face:property tree-sitter-hl-face:variable) rear-nonsticky t fontified t ws-butler-chg chg)) . 526) (undo-tree-id0 . -7) (undo-tree-id1 . -7) (undo-tree-id2 . -7) (undo-tree-id3 . -7) (undo-tree-id4 . -7)) nil (25400 59619 769226 397000) 0 nil])
([nil nil ((nil fontified nil 527 . 528) (nil fontified nil 521 . 527) (521 . 528)) nil (25400 59619 769162 954000) 0 nil])
([nil nil ((528 . 533) (t 25400 59619 774978 781000)) nil (25400 59635 365689 55000) 0 nil])
([nil nil ((533 . 534)) nil (25400 59635 365688 83000) 0 nil])
([nil nil ((534 . 543)) nil (25400 59635 365687 326000) 0 nil])
([nil nil ((543 . 548)) nil (25400 59635 365686 605000) 0 nil])
([nil nil ((548 . 549)) nil (25400 59635 365685 777000) 0 nil])
([nil nil ((549 . 553)) nil (25400 59635 365681 758000) 0 nil])
([nil nil ((551 . 552) (t 25400 59635 375148 518000)) nil (25400 59637 163121 787000) 0 nil])
([nil nil ((#("    mpc-qt" 0 4 (fontified t) 4 7 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:property) fontified t) 7 8 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:property) fontified t) 8 10 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:property) fontified t)) . 544) (undo-tree-id66 . -8) (undo-tree-id67 . -8) (undo-tree-id68 . -8) (undo-tree-id69 . -8) (undo-tree-id70 . -8) (undo-tree-id71 . -8) (undo-tree-id72 . -8) (undo-tree-id73 . -8) (undo-tree-id74 . -8) (undo-tree-id75 . -8) (undo-tree-id76 . -8) (undo-tree-id77 . -8) (undo-tree-id78 . -8) (undo-tree-id79 . -8) (undo-tree-id80 . -8) (undo-tree-id81 . -8) (undo-tree-id82 . -8) (undo-tree-id83 . -8) (undo-tree-id84 . -10) (t 25400 59637 167167 982000)) nil (25400 59645 719193 262000) 0 nil])
([nil nil ((544 . 548)) nil (25400 59645 719173 373000) 0 nil])
([nil nil ((548 . 549)) nil (25400 59645 719172 661000) 0 nil])
([nil nil ((552 . 559) (549 . 552)) nil (25400 59645 719168 546000) 0 nil])
([nil nil ((#("    thunderbird" 0 4 (fontified t) 4 15 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:property) fontified t)) . 544) (undo-tree-id116 . -8) (undo-tree-id117 . -15) (undo-tree-id118 . -15) (undo-tree-id119 . -15) (undo-tree-id120 . -15) (undo-tree-id121 . -15) (undo-tree-id122 . -15) (undo-tree-id123 . -15) (t 25400 59645 723260 813000)) nil (25400 59647 977379 186000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -543) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) 544) nil (25400 59647 977371 933000) 0 nil])
([nil nil ((298 . 300) (#("  " 0 2 (fontified nil ws-butler-chg chg)) . 297) (undo-tree-id3 . -2) (undo-tree-id4 . -2) (undo-tree-id5 . -2) (297 . 300) (#("  " 0 2 (fontified nil ws-butler-chg chg)) . 296) (296 . 298) (296 . 297) (t 25400 59647 983285 306000)) nil (25400 62296 603185 474000) 0 nil])
([nil nil ((#("  " 0 2 (fontified nil ws-butler-chg chg)) . -741) (#("  " 0 2 (fontified nil ws-butler-chg chg)) . -728) (#("  " 0 2 (fontified nil ws-butler-chg chg)) . -716) (#("  " 0 2 (fontified nil ws-butler-chg chg)) . -693) (#("  " 0 2 (fontified nil ws-butler-chg chg)) . -669) (#("  " 0 2 (fontified nil ws-butler-chg chg)) . -646) (#("  " 0 2 (fontified nil ws-butler-chg chg)) . -617) (#("  " 0 2 (fontified nil ws-butler-chg chg)) . -601) (#("  " 0 2 (fontified nil ws-butler-chg chg)) . -585) (#("  " 0 2 (fontified nil ws-butler-chg chg)) . -577) (#("  " 0 2 (fontified nil ws-butler-chg chg)) . -565) (#("  " 0 2 (fontified nil ws-butler-chg chg)) . -532) (#("  " 0 2 (fontified nil ws-butler-chg chg)) . -494) (#("  " 0 2 (ws-butler-chg chg fontified t)) . -299) (765 . 769) (#("  " 0 2 (fontified t)) . 765) (748 . 754) (#("    " 0 4 (fontified t)) . 748) (734 . 740) (#("    " 0 4 (fontified t)) . 734) (709 . 715) (#("    " 0 4 (fontified t)) . 709) (683 . 689) (#("    " 0 4 (fontified t)) . 683) (658 . 664) (#("    " 0 4 (fontified t)) . 658) (627 . 633) (#("    " 0 4 (fontified t)) . 627) (609 . 615) (#("    " 0 4 (fontified t)) . 609) (591 . 597) (#("    " 0 4 (fontified t)) . 591) (581 . 587) (#("    " 0 4 (fontified t)) . 581) (567 . 573) (#("    " 0 4 (fontified t)) . 567) (534 . 538) (#("  " 0 2 (fontified t)) . 534) (494 . 498) (#("  " 0 2 (fontified t)) . 494) (nil rear-nonsticky nil 489 . 490) (nil fontified nil 489 . 490) (nil fontified nil 488 . 489) (nil fontified nil 487 . 488) (nil fontified nil 327 . 487) (nil fontified nil 326 . 327) (nil fontified nil 325 . 326) (nil fontified nil 324 . 325) (nil fontified nil 323 . 324) (nil fontified nil 312 . 323) (nil fontified nil 311 . 312) (nil fontified nil 301 . 311) (nil fontified nil 297 . 301) (297 . 490)) nil (25400 62296 603179 773000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg face whitespace-trailing)) . 489) (undo-tree-id0 . -2) (undo-tree-id1 . -2) (undo-tree-id2 . -2)) nil (25400 62296 603172 720000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . -487) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) 488 (t 25400 62296 610388 561000)) nil (25400 62298 847291 275000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t face tree-sitter-hl-face:string)) . -340) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("2" 0 1 (fontified t face tree-sitter-hl-face:string)) . -341) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (#("5" 0 1 (fontified t face tree-sitter-hl-face:string)) . -342) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) 343 (t 25400 62298 850413 5000)) nil (25400 62304 572517 68000) 0 nil])
([nil nil ((340 . 342)) nil (25400 62304 572496 670000) 0 nil])
([nil nil ((571 . 575) (#("    " 0 4 (ws-butler-chg chg fontified nil)) . 570) (undo-tree-id123 . -4) (570 . 575) (#("    " 0 4 (ws-butler-chg chg fontified nil)) . 569) (undo-tree-id124 . -4) (568 . 574) (t 25400 62304 578462 899000)) nil (25401 471 393683 739000) 0 nil])
([nil nil ((573 . 577) (#("    " 0 4 (ws-butler-chg chg fontified nil)) . 572) (undo-tree-id121 . -4) (572 . 577) (#("    " 0 4 (ws-butler-chg chg fontified nil)) . 571) (undo-tree-id122 . -4) (575 . 576)) nil (25401 471 393681 962000) 0 nil])
([nil nil ((558 . 562) (#("    " 0 4 (fontified nil)) . 557) (undo-tree-id120 . -4) (561 . 562)) nil (25401 471 393680 201000) 0 nil])
([nil nil ((557 . 559)) nil (25401 471 393679 158000) 0 nil])
([nil nil ((#("#" 0 1 (face tree-sitter-hl-face:comment ws-butler-chg chg fontified t)) . -557) (undo-tree-id118 . -1) (#(" " 0 1 (face tree-sitter-hl-face:comment ws-butler-chg chg fontified t)) . -558) (undo-tree-id119 . -1) 559) nil (25401 471 393678 459000) 0 nil])
([nil nil ((557 . 561)) nil (25401 471 393676 984000) 0 nil])
([nil nil ((561 . 564)) nil (25401 471 393676 708000) 0 nil])
([nil nil ((564 . 572)) nil (25401 471 393676 444000) 0 nil])
([nil nil ((#("R" 0 1 (face tree-sitter-hl-face:comment ws-butler-chg chg fontified t)) . -570) (undo-tree-id116 . -1) (#("e" 0 1 (face tree-sitter-hl-face:comment ws-butler-chg chg fontified t)) . -571) (undo-tree-id117 . -1) 572) nil (25401 471 393676 136000) 0 nil])
([nil nil ((570 . 571)) nil (25401 471 393675 8000) 0 nil])
([nil nil ((571 . 572)) nil (25401 471 393674 699000) 0 nil])
([nil nil ((#("p" 0 1 (face tree-sitter-hl-face:comment ws-butler-chg chg fontified t)) . -570) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (#("r" 0 1 (face tree-sitter-hl-face:comment ws-butler-chg chg fontified t)) . -571) (undo-tree-id114 . -1) (undo-tree-id115 . -1) 572) nil (25401 471 393674 307000) 0 nil])
([nil nil ((570 . 571)) nil (25401 471 393671 835000) 0 nil])
([nil nil ((571 . 577)) nil (25401 471 393671 420000) 0 nil])
([nil nil ((#("f" 0 1 (face tree-sitter-hl-face:comment ws-butler-chg chg fontified t)) . -573) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (#("a" 0 1 (face tree-sitter-hl-face:comment ws-butler-chg chg fontified t)) . -574) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (#("c" 0 1 (face tree-sitter-hl-face:comment ws-butler-chg chg fontified t)) . -575) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (#("e" 0 1 (face tree-sitter-hl-face:comment ws-butler-chg chg fontified t)) . -576) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) 577) nil (25401 471 393670 26000) 0 nil])
([nil nil ((#("l" 0 1 (face tree-sitter-hl-face:comment ws-butler-chg chg fontified t)) . -572) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) 573) nil (25401 471 393143 353000) 0 nil])
([nil nil ((572 . 583)) nil (25401 471 393131 276000) 0 nil])
([nil nil ((583 . 588)) nil (25401 471 393131 15000) 0 nil])
([nil nil ((#("i" 0 1 (face tree-sitter-hl-face:comment ws-butler-chg chg fontified t)) . -587) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) 588) nil (25401 471 393130 694000) 0 nil])
([nil nil ((587 . 589)) nil (25401 471 393128 36000) 0 nil])
([nil nil ((#("i" 0 1 (face tree-sitter-hl-face:comment ws-butler-chg chg fontified t)) . -588) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) 589) nil (25401 471 393127 617000) 0 nil])
([nil nil ((588 . 590)) nil (25401 471 393125 437000) 0 nil])
([nil nil ((621 . 625) (#("    " 0 4 (ws-butler-chg chg fontified nil)) . 620) (undo-tree-id46 . -4) (undo-tree-id47 . -4) (undo-tree-id48 . -4) (619 . 625)) nil (25401 471 393124 902000) 0 nil])
([nil nil ((611 . 614)) nil (25401 471 393122 898000) 0 nil])
([nil nil ((614 . 623)) nil (25401 471 393122 636000) 0 nil])
([nil nil ((623 . 624)) nil (25401 471 393122 427000) 0 nil])
([nil nil ((624 . 630)) nil (25401 471 393122 196000) 0 nil])
([nil nil ((#("i" 0 1 (face tree-sitter-hl-face:comment ws-butler-chg chg fontified t)) . -629) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) 630) nil (25401 471 393121 719000) 0 nil])
([nil nil ((629 . 631)) nil (25401 471 393118 818000) 0 nil])
([nil nil ((603 . 607)) nil (25401 471 393118 532000) 0 nil])
([nil nil ((607 . 608)) nil (25401 471 393118 210000) 0 nil])
([nil nil ((608 . 611)) nil (25401 471 393117 921000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . -611) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . 1) (undo-tree-id7 . 1) (undo-tree-id8 . 1) (undo-tree-id9 . 1) (undo-tree-id10 . 1) (undo-tree-id11 . 1) (undo-tree-id12 . 1) (undo-tree-id13 . 1) (undo-tree-id14 . 1) (undo-tree-id15 . 1) (undo-tree-id16 . 1) (undo-tree-id17 . 1) (undo-tree-id18 . 1) (undo-tree-id19 . 1) (undo-tree-id20 . 1) (undo-tree-id21 . 1) (undo-tree-id22 . 1) (undo-tree-id23 . 1) (undo-tree-id24 . 1) (undo-tree-id25 . 1) (undo-tree-id26 . 1) (undo-tree-id27 . 1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (#("
" 0 1 (ws-butler-chg delete fontified t)) . -612) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) 613) nil (25401 471 393116 681000) 0 nil])
([nil nil ((645 . 650)) nil (25401 471 393094 879000) 0 nil])
([nil nil ((650 . 651)) nil (25401 471 393094 452000) 0 nil])
([nil nil ((651 . 654)) nil (25401 471 393093 890000) 0 nil])
([nil nil ((#("    " 0 4 (face whitespace-trailing ws-butler-chg chg fontified t)) . 656) (undo-tree-id0 . -4) 654) nil (25401 471 393091 139000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -654) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) 655 (t 25401 471 397863 17000)) nil (25401 472 504811 924000) 0 nil])
([nil nil ((656 . 660) (#("    " 0 4 (ws-butler-chg chg fontified nil)) . 655) (655 . 659) (655 . 656) (t 25401 472 513875 141000)) nil (25401 477 868738 798000) 0 nil])
([nil nil ((660 . 663)) nil (25401 477 868737 515000) 0 nil])
([nil nil ((663 . 666)) nil (25401 477 868736 879000) 0 nil])
([nil nil ((#("e" 0 1 (face tree-sitter-hl-face:comment ws-butler-chg chg fontified t)) . -665) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) 666) nil (25401 477 868735 730000) 0 nil])
([nil nil ((665 . 667)) nil (25401 477 868722 26000) 0 nil])
([nil nil ((729 . 733) (#("    " 0 4 (ws-butler-chg chg fontified nil)) . 728) (728 . 732) (728 . 729) (t 25401 477 877929 336000)) nil (25401 482 536631 512000) 0 nil])
([nil nil ((733 . 736)) nil (25401 482 536629 901000) 0 nil])
([nil nil ((736 . 744)) nil (25401 482 536626 353000) 0 nil])
([nil nil ((611 . 616) (t 25401 482 545971 561000)) nil (25401 1290 196207 580000) 0 nil])
([nil nil ((616 . 617)) nil (25401 1290 196207 262000) 0 nil])
([nil nil ((617 . 618)) nil (25401 1290 196206 938000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t ws-butler-chg chg face (tree-sitter-hl-face:variable tree-sitter-hl-face:property))) . -617) (undo-tree-id125 . -1) (undo-tree-id126 . -1) 618) nil (25401 1290 196206 562000) 0 nil])
([nil nil ((617 . 620)) nil (25401 1290 196205 18000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t ws-butler-chg chg face (tree-sitter-hl-face:variable tree-sitter-hl-face:property))) . -616) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg face (tree-sitter-hl-face:variable tree-sitter-hl-face:property))) . -617) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg face (tree-sitter-hl-face:variable tree-sitter-hl-face:property))) . -618) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg face (tree-sitter-hl-face:variable tree-sitter-hl-face:property))) . -619) (undo-tree-id123 . -1) (undo-tree-id124 . -1) 620) nil (25401 1290 196203 745000) 0 nil])
([nil nil ((616 . 617)) nil (25401 1290 196189 966000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t ws-butler-chg chg face (tree-sitter-hl-face:variable tree-sitter-hl-face:property))) . -616) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) 617) nil (25401 1290 196189 243000) 0 nil])
([nil nil ((616 . 617)) nil (25401 1290 196056 511000) 0 nil])
([nil nil ((617 . 618)) nil (25401 1290 196055 949000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t ws-butler-chg chg face (tree-sitter-hl-face:variable tree-sitter-hl-face:property))) . -616) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg face (tree-sitter-hl-face:variable tree-sitter-hl-face:property))) . -617) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) 618) nil (25401 1290 196055 161000) 0 nil])
([nil nil ((#("    " 0 1 (fontified nil ws-butler-chg delete) 1 4 (fontified nil ws-butler-chg chg)) . 611) (undo-tree-id0 . -4) (undo-tree-id1 . -4) (undo-tree-id2 . -4) (undo-tree-id3 . -4) (undo-tree-id4 . -4) (undo-tree-id5 . -4) (undo-tree-id6 . -4) (undo-tree-id7 . -4) (undo-tree-id8 . -4) (undo-tree-id9 . -4) (undo-tree-id10 . -4) (undo-tree-id11 . -4) (undo-tree-id12 . -4) (undo-tree-id13 . -4) (undo-tree-id14 . -4) (undo-tree-id15 . -4) (undo-tree-id16 . -4) (undo-tree-id17 . -4) (undo-tree-id18 . -4) (undo-tree-id19 . -4) (undo-tree-id20 . -4) (undo-tree-id21 . -4) (undo-tree-id22 . -4) (undo-tree-id23 . -4) (undo-tree-id24 . -4) (undo-tree-id25 . -4) (undo-tree-id26 . -4) (undo-tree-id27 . -4) (undo-tree-id28 . -4) (undo-tree-id29 . -4) (undo-tree-id30 . -4) (undo-tree-id31 . -4) (undo-tree-id32 . -4) (undo-tree-id33 . -4) (undo-tree-id34 . -4) (undo-tree-id35 . -4) (undo-tree-id36 . -4) (undo-tree-id37 . -4) (undo-tree-id38 . -4) (undo-tree-id39 . -4) (undo-tree-id40 . -4) (undo-tree-id41 . -4) (undo-tree-id42 . -4) (undo-tree-id43 . -4) (undo-tree-id44 . -4) (undo-tree-id45 . -4) (undo-tree-id46 . -4) (undo-tree-id47 . -4) (undo-tree-id48 . -4) (undo-tree-id49 . -4) (undo-tree-id50 . -4) (undo-tree-id51 . -4) (undo-tree-id52 . -4) (undo-tree-id53 . -4) (undo-tree-id54 . -4) (#("
" 0 1 (fontified t ws-butler-chg chg)) . -611) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) 616) nil (25401 1290 196040 966000) 0 nil])
([nil nil ((602 . 607)) nil (25401 1290 195924 808000) 0 nil])
([nil nil ((607 . 608)) nil (25401 1290 195924 488000) 0 nil])
([nil nil ((608 . 610)) nil (25401 1290 195923 895000) 0 nil])
([nil nil ((610 . 611)) nil (25401 1290 195920 844000) 0 nil])
([nil nil ((663 . 668) (t 25401 1290 207912 472000)) nil (25401 1516 210025 86000) 0 nil])
([nil nil ((#("    " 0 4 (ws-butler-chg chg fontified t)) . -687) (#("    " 0 4 (ws-butler-chg chg fontified t)) . -675) (#("        " 0 8 (ws-butler-chg chg fontified t)) . -668) (#("    " 0 4 (ws-butler-chg chg fontified t)) . -711) (nil rear-nonsticky nil 716 . 717) (nil fontified nil 715 . 717) (nil fontified nil 706 . 715) (nil fontified nil 703 . 706) (nil fontified nil 694 . 703) (nil fontified nil 687 . 694) (nil fontified nil 678 . 687) (nil fontified nil 676 . 678) (nil fontified nil 668 . 676) (668 . 717)) nil (25401 1516 210023 990000) 0 nil])
([nil nil ((#("    fzf" 0 4 (ws-butler-chg chg fontified t) 4 5 (ws-butler-chg delete fontified t face (tree-sitter-hl-face:variable tree-sitter-hl-face:property)) 5 7 (ws-butler-chg chg fontified t face (tree-sitter-hl-face:variable tree-sitter-hl-face:property))) . 683) (undo-tree-id155 . -6) (undo-tree-id156 . -7)) nil (25401 1516 210022 233000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t)) . -682) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) 683) nil (25401 1516 210020 612000) 0 nil])
([nil nil ((#("    jq" 0 4 (ws-butler-chg chg fontified t) 4 5 (ws-butler-chg delete fontified t face (tree-sitter-hl-face:variable tree-sitter-hl-face:property)) 5 6 (ws-butler-chg chg fontified t rear-nonsticky t face (tree-sitter-hl-face:variable tree-sitter-hl-face:property))) . 683) (undo-tree-id141 . -6) (undo-tree-id142 . -6) (undo-tree-id143 . -6) (undo-tree-id144 . -6) (undo-tree-id145 . -6) (undo-tree-id146 . -6)) nil (25401 1516 210015 323000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . -682) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . 1) (undo-tree-id132 . 1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) 683) nil (25401 1516 210009 114000) 0 nil])
([nil nil ((684 . 688) (#("    " 0 4 (fontified nil ws-butler-chg chg)) . 683) (undo-tree-id166 . -4) (undo-tree-id167 . -4) (undo-tree-id168 . -4) (682 . 688) (t 25401 1516 216681 90000)) nil (25401 1551 547270 938000) 0 nil])
([nil nil ((#("    " 0 4 (ws-butler-chg chg fontified t)) . -953) (#("    " 0 4 (ws-butler-chg chg fontified t)) . -942) (#("    " 0 4 (ws-butler-chg chg fontified t)) . -930) (#("    " 0 4 (ws-butler-chg chg fontified t)) . -917) (#("    " 0 4 (ws-butler-chg chg fontified t)) . -897) (#("    " 0 4 (ws-butler-chg chg fontified t)) . -885) (#("    " 0 4 (ws-butler-chg chg fontified t)) . -858) (#("    " 0 4 (ws-butler-chg chg fontified t)) . -844) (#("    " 0 4 (ws-butler-chg chg fontified t)) . -814) (#("    " 0 4 (ws-butler-chg chg fontified t)) . -766) (#("    " 0 4 (ws-butler-chg chg fontified t)) . -720) (#("    " 0 4 (ws-butler-chg chg fontified t)) . -707) (#("    " 0 4 (ws-butler-chg chg fontified t)) . -698) (#("        " 0 8 (ws-butler-chg chg fontified t)) . -688) (nil rear-nonsticky nil 1016 . 1017) (nil fontified nil 1016 . 1017) (nil fontified nil 1013 . 1016) (nil fontified nil 1004 . 1013) (nil fontified nil 998 . 1004) (nil fontified nil 989 . 998) (nil fontified nil 982 . 989) (nil fontified nil 973 . 982) (nil fontified nil 965 . 973) (nil fontified nil 956 . 965) (nil fontified nil 941 . 956) (nil fontified nil 932 . 941) (nil fontified nil 925 . 932) (nil fontified nil 916 . 925) (nil fontified nil 910 . 916) (nil fontified nil 909 . 910) (nil fontified nil 894 . 909) (nil fontified nil 885 . 894) (nil fontified nil 876 . 885) (nil fontified nil 867 . 876) (nil fontified nil 842 . 867) (nil fontified nil 833 . 842) (nil fontified nil 802 . 833) (nil fontified nil 801 . 802) (nil fontified nil 790 . 801) (nil fontified nil 781 . 790) (nil fontified nil 740 . 781) (nil fontified nil 731 . 740) (nil fontified nil 723 . 731) (nil fontified nil 714 . 723) (nil fontified nil 710 . 714) (nil fontified nil 701 . 710) (nil fontified nil 696 . 701) (nil fontified nil 688 . 696) (688 . 1017)) nil (25401 1551 547266 50000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t rear-nonsticky t)) . -956) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) 957) nil (25401 1551 547262 438000) 0 nil])
([nil nil ((#("c" 0 1 (ws-butler-chg chg fontified t face tree-sitter-hl-face:comment)) . -690) (undo-tree-id157 . -1) (undo-tree-id158 . -1) 691) nil (25401 1551 547257 137000) 0 nil])
([nil nil ((690 . 691)) nil (25401 1551 547243 944000) 0 nil])
([nil nil ((682 . 687) (t 25401 1551 552177 799000)) nil (25401 1559 517911 361000) 0 nil])
([nil nil ((687 . 688)) nil (25401 1559 517910 283000) 0 nil])
([nil nil ((688 . 691)) nil (25401 1559 517909 815000) 0 nil])
([nil nil ((691 . 696)) nil (25401 1559 517909 54000) 0 nil])
([nil nil ((696 . 697)) nil (25401 1559 517907 817000) 0 nil])
([nil nil ((697 . 703) (#("i" 0 1 (fontified t ws-butler-chg chg face (tree-sitter-hl-face:variable tree-sitter-hl-face:property))) . -697) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) 698 (697 . 698)) nil (25401 1559 517904 495000) 0 nil])
([nil nil ((691 . 696) (t 25401 1559 528064 215000)) nil (25401 1562 539089 330000) 0 nil])
([nil nil ((696 . 697)) nil (25401 1562 539088 758000) 0 nil])
([nil nil ((697 . 701)) nil (25401 1562 539085 448000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t face (tree-sitter-hl-face:variable tree-sitter-hl-face:property))) . -697) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (#("i" 0 1 (fontified t face (tree-sitter-hl-face:variable tree-sitter-hl-face:property))) . -698) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (#("l" 0 1 (fontified t face (tree-sitter-hl-face:variable tree-sitter-hl-face:property))) . -699) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (#("l" 0 1 (fontified t face (tree-sitter-hl-face:variable tree-sitter-hl-face:property))) . -700) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) 701 (t 25401 1562 548021 208000)) nil (25401 1809 477192 651000) 0 nil])
([nil nil ((697 . 699)) nil (25401 1809 477159 696000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t ws-butler-chg chg face (tree-sitter-hl-face:variable tree-sitter-hl-face:property))) . -697) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg face (tree-sitter-hl-face:variable tree-sitter-hl-face:property))) . -698) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) 699) nil (25401 1809 477158 309000) 0 nil])
([nil nil ((697 . 698)) nil (25401 1809 477108 143000) 0 nil])
([nil nil ((698 . 702)) nil (25401 1809 477103 508000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face (tree-sitter-hl-face:variable tree-sitter-hl-face:property))) . -708) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (#("l" 0 1 (fontified t face (tree-sitter-hl-face:variable tree-sitter-hl-face:property))) . -709) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (#("l" 0 1 (fontified t face (tree-sitter-hl-face:variable tree-sitter-hl-face:property))) . -710) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (#("a" 0 1 (fontified t face (tree-sitter-hl-face:variable tree-sitter-hl-face:property))) . -711) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (#("l" 0 1 (fontified t face (tree-sitter-hl-face:variable tree-sitter-hl-face:property))) . -712) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (#("l" 0 1 (fontified t face (tree-sitter-hl-face:variable tree-sitter-hl-face:property))) . -713) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) 714 (t 25401 1809 485399 232000)) nil (25401 1841 502732 963000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t face (tree-sitter-hl-face:variable tree-sitter-hl-face:property))) . -707) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) 708) nil (25401 1841 502690 335000) 0 nil])
([nil nil ((707 . 708)) nil (25401 1841 502657 29000) 0 nil])
([nil nil ((708 . 713)) nil (25401 1841 502652 494000) 0 nil])
([nil nil ((#("    procps
    psmisc" 0 4 (fontified t) 4 5 (fontified t face (tree-sitter-hl-face:variable tree-sitter-hl-face:property)) 5 10 (fontified t face (tree-sitter-hl-face:variable tree-sitter-hl-face:property)) 10 11 (fontified t) 11 15 (fontified t) 15 21 (fontified t face (tree-sitter-hl-face:variable tree-sitter-hl-face:property))) . 692) (undo-tree-id397 . -21) (undo-tree-id398 . -10) (undo-tree-id399 . -19) (undo-tree-id400 . -15) (undo-tree-id401 . -15) (undo-tree-id402 . -15) (undo-tree-id403 . -15) (undo-tree-id404 . -15) (undo-tree-id405 . -15) (undo-tree-id406 . -15) (undo-tree-id407 . -15) (undo-tree-id408 . -15) (undo-tree-id409 . -15) (undo-tree-id410 . -15) (undo-tree-id411 . -15) (undo-tree-id412 . -15) (undo-tree-id413 . -15) (undo-tree-id414 . -15) (undo-tree-id415 . -15) (undo-tree-id416 . -15) (undo-tree-id417 . -15) (undo-tree-id418 . -21) (undo-tree-id419 . -21) (undo-tree-id420 . -21) (undo-tree-id421 . -21) (undo-tree-id422 . -21) (undo-tree-id423 . -21) (undo-tree-id424 . -21) (undo-tree-id425 . -21) (undo-tree-id426 . -21) (undo-tree-id427 . -21) (undo-tree-id428 . -21) (undo-tree-id429 . -21) (undo-tree-id430 . -21) (undo-tree-id431 . -21) (undo-tree-id432 . -21) (undo-tree-id433 . -21) (undo-tree-id434 . -21) (undo-tree-id435 . -21) (undo-tree-id436 . -21) (undo-tree-id437 . -21) (undo-tree-id438 . -21) (undo-tree-id439 . -21) (undo-tree-id440 . -21) (undo-tree-id441 . -21) (undo-tree-id442 . -21) (undo-tree-id443 . -21) (undo-tree-id444 . -21) (undo-tree-id445 . -21) (undo-tree-id446 . -21) (undo-tree-id447 . -21) (undo-tree-id448 . -21) (undo-tree-id449 . -21) (undo-tree-id450 . -21) (undo-tree-id451 . -21) (undo-tree-id452 . -21) (undo-tree-id453 . -21) (undo-tree-id454 . -21) (undo-tree-id455 . -21) (undo-tree-id456 . -21) (undo-tree-id457 . -21) (undo-tree-id458 . -21) (undo-tree-id459 . -21) (undo-tree-id460 . -21) (undo-tree-id461 . -21) (undo-tree-id462 . -21) (undo-tree-id463 . -21) (undo-tree-id464 . -21) (undo-tree-id465 . -21) (undo-tree-id466 . -21) (undo-tree-id467 . -21) (undo-tree-id468 . -21) (undo-tree-id469 . -21) (undo-tree-id470 . -21) (undo-tree-id471 . -21) (undo-tree-id472 . -21) (undo-tree-id473 . -21) (undo-tree-id474 . -21) (undo-tree-id475 . -21) (undo-tree-id476 . -21) (undo-tree-id477 . -10) (t 25401 1841 507752 472000)) nil (25401 1868 809753 667000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -691) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) 692) nil (25401 1868 809704 259000) 0 nil])
([nil nil ((620 . 625)) nil (25401 1868 809210 816000) 0 nil])
([nil nil ((#("    " 0 4 (ws-butler-chg chg fontified t)) . -625) (nil rear-nonsticky nil 645 . 646) (nil fontified nil 640 . 646) (nil fontified nil 636 . 640) (nil fontified nil 635 . 636) (nil fontified nil 630 . 635) (nil fontified nil 629 . 630) (nil fontified nil 625 . 629) (625 . 646)) nil (25401 1868 809207 79000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t face (tree-sitter-hl-face:variable tree-sitter-hl-face:property))) . -743) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (#("1" 0 1 (fontified t face (tree-sitter-hl-face:variable tree-sitter-hl-face:property))) . -744) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (#("2" 0 1 (fontified t face (tree-sitter-hl-face:variable tree-sitter-hl-face:property))) . -745) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) 746 (t 25401 1868 813527 864000)) nil (25401 1936 520087 137000) 0 nil])
([nil nil ((#("    #llvmPackages_12.clang-unwrapped # clangd" 0 4 (fontified t) 4 5 (fontified t face tree-sitter-hl-face:comment) 5 45 (fontified t face tree-sitter-hl-face:comment)) . 744) (undo-tree-id563 . -9) (undo-tree-id564 . -45)) nil (25401 1936 520068 195000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . -743) (undo-tree-id551 . -1) (undo-tree-id552 . 1) (undo-tree-id553 . 1) (undo-tree-id554 . 1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) 744) nil (25401 1936 520066 329000) 0 nil])
([nil nil ((#("    #llvmPackages_13.libclang" 0 4 (fontified t) 4 5 (fontified t face tree-sitter-hl-face:comment) 5 29 (fontified t face tree-sitter-hl-face:comment)) . 792) (undo-tree-id549 . -9) (undo-tree-id550 . -29)) nil (25401 1936 520049 496000) 0 nil])
([nil nil ((#("    #libclang" 0 4 (fontified t) 4 5 (fontified t face tree-sitter-hl-face:comment) 5 13 (fontified t face tree-sitter-hl-face:comment)) . 793) (undo-tree-id548 . -13)) nil (25401 1936 520047 681000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -791) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (#("
" 0 1 (fontified t ws-butler-chg delete)) . -792) (undo-tree-id540 . -1) (undo-tree-id541 . 1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) 793) nil (25401 1936 520045 639000) 0 nil])
([nil nil ((#("    llvmPackages_12.libcxx" 0 4 (fontified t) 4 5 (fontified t face (tree-sitter-hl-face:variable tree-sitter-hl-face:property)) 5 19 (fontified t face (tree-sitter-hl-face:variable tree-sitter-hl-face:property)) 19 20 (fontified t face tree-sitter-hl-face:punctuation\.delimiter) 20 26 (fontified t face (tree-sitter-hl-face:property tree-sitter-hl-face:variable))) . 792) (undo-tree-id512 . -26) (undo-tree-id513 . -26) (undo-tree-id514 . -25) (undo-tree-id515 . -25) (undo-tree-id516 . -24) (undo-tree-id517 . -24) (undo-tree-id518 . -23) (undo-tree-id519 . -23) (undo-tree-id520 . -22) (undo-tree-id521 . -22) (undo-tree-id522 . -21) (undo-tree-id523 . -21) (undo-tree-id524 . -26)) nil (25401 1936 520014 252000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face tree-sitter-hl-face:comment)) . -797) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) 798) nil (25401 1936 520006 644000) 0 nil])
([nil nil ((#("    " 0 1 (fontified nil ws-butler-chg delete) 1 4 (fontified nil)) . 792) (undo-tree-id489 . -4) (undo-tree-id490 . 4) (undo-tree-id491 . 4) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -2) (undo-tree-id495 . -2) (undo-tree-id496 . -3) (undo-tree-id497 . -3) (undo-tree-id498 . -4) (undo-tree-id499 . -4) (undo-tree-id500 . -4) (undo-tree-id501 . -4) (undo-tree-id502 . -4) (undo-tree-id503 . -4) (#("
" 0 1 (fontified t ws-butler-chg delete)) . -792) (undo-tree-id504 . 1) (undo-tree-id505 . 1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) 797) nil (25401 1936 520004 346000) 0 nil])
([nil nil ((792 . 796)) nil (25401 1936 519992 345000) 0 nil])
([nil nil ((#("#clang-analyzer" 0 1 (fontified t face tree-sitter-hl-face:comment) 1 15 (fontified t face tree-sitter-hl-face:comment)) . 807) (undo-tree-id488 . -15)) nil (25401 1936 519991 200000) 0 nil])
([nil nil ((#("    " 0 1 (fontified nil ws-butler-chg delete) 1 4 (fontified nil)) . 802) (undo-tree-id478 . -4) (undo-tree-id479 . -4) (undo-tree-id480 . -4) (undo-tree-id481 . -4) (undo-tree-id482 . -4) (#("
" 0 1 (fontified t)) . -802) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) 807) nil (25401 1936 519987 382000) 0 nil])
([nil nil ((#("    ncurses" 0 4 (fontified t) 4 5 (fontified t face (tree-sitter-hl-face:variable tree-sitter-hl-face:property)) 5 11 (fontified t face (tree-sitter-hl-face:variable tree-sitter-hl-face:property))) . 816) (undo-tree-id591 . -10) (undo-tree-id592 . -11) (t 25401 1936 529151 580000)) nil (25401 1939 136746 850000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -815) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) 816) nil (25401 1939 136742 430000) 0 nil])
([nil nil ((#("    gdb" 0 4 (fontified t) 4 5 (fontified t face (tree-sitter-hl-face:variable tree-sitter-hl-face:property)) 5 7 (fontified t face (tree-sitter-hl-face:variable tree-sitter-hl-face:property))) . 827) (undo-tree-id603 . -7) (undo-tree-id604 . -7) (undo-tree-id605 . -7) (t 25401 1939 141271 809000)) nil (25401 1962 905063 431000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -826) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) 827) nil (25401 1962 905060 585000) 0 nil])
([nil nil ((642 . 647)) nil (25401 1962 905045 445000) 0 nil])
([nil nil ((#("    " 0 4 (ws-butler-chg chg fontified t)) . -647) (nil rear-nonsticky nil 653 . 654) (nil fontified nil 652 . 654) (nil fontified nil 651 . 652) (nil fontified nil 647 . 651) (647 . 654)) nil (25401 1962 905041 759000) 0 nil])
([nil nil ((741 . 746) (t 25401 1962 910306 773000)) nil (25401 2088 145752 898000) 0 nil])
([nil nil ((746 . 747)) nil (25401 2088 145751 811000) 0 nil])
([nil nil ((747 . 749)) nil (25401 2088 145748 81000) 0 nil])
([nil nil ((526 . 528) (#("  " 0 2 (fontified nil ws-butler-chg chg)) . 525) (undo-tree-id652 . -2) (undo-tree-id653 . -2) (undo-tree-id654 . -2) (524 . 528) (t 25401 2088 154308 964000)) nil (25401 4813 130103 993000) 0 nil])
([nil nil ((#("      " 0 6 (fontified nil ws-butler-chg chg)) . -1137) (#("      " 0 6 (fontified nil ws-butler-chg chg)) . -1124) (#("      " 0 6 (fontified nil ws-butler-chg chg)) . -1112) (#("      " 0 6 (fontified nil ws-butler-chg chg)) . -1089) (#("      " 0 6 (fontified nil ws-butler-chg chg)) . -1065) (#("      " 0 6 (fontified nil ws-butler-chg chg)) . -1042) (#("      " 0 6 (fontified nil ws-butler-chg chg)) . -1026) (#("      " 0 6 (fontified nil ws-butler-chg chg)) . -997) (#("      " 0 6 (fontified nil ws-butler-chg chg)) . -981) (#("      " 0 6 (fontified nil ws-butler-chg chg)) . -965) (#("      " 0 6 (fontified nil ws-butler-chg chg)) . -953) (#("      " 0 6 (fontified nil ws-butler-chg chg)) . -941) (#("      " 0 6 (fontified nil ws-butler-chg chg)) . -928) (#("      " 0 6 (fontified nil ws-butler-chg chg)) . -917) (#("      " 0 6 (fontified nil ws-butler-chg chg)) . -869) (#("      " 0 6 (fontified nil ws-butler-chg chg)) . -859) (#("      " 0 6 (fontified nil ws-butler-chg chg)) . -851) (#("      " 0 6 (fontified nil ws-butler-chg chg)) . -842) (#("      " 0 6 (fontified nil ws-butler-chg chg)) . -832) (#("      " 0 6 (fontified nil ws-butler-chg chg)) . -822) (#("      " 0 6 (fontified nil ws-butler-chg chg)) . -810) (#("      " 0 6 (fontified nil ws-butler-chg chg)) . -803) (#("      " 0 6 (fontified nil ws-butler-chg chg)) . -794) (#("      " 0 6 (fontified nil ws-butler-chg chg)) . -786) (#("      " 0 6 (fontified nil ws-butler-chg chg)) . -761) (#("      " 0 6 (fontified nil ws-butler-chg chg)) . -752) (#("      " 0 6 (fontified nil ws-butler-chg chg)) . -741) (#("      " 0 6 (fontified nil ws-butler-chg chg)) . -730) (#("      " 0 6 (fontified nil ws-butler-chg chg)) . -721) (#("      " 0 6 (fontified nil ws-butler-chg chg)) . -712) (#("      " 0 6 (fontified nil ws-butler-chg chg)) . -700) (#("      " 0 6 (fontified nil ws-butler-chg chg)) . -666) (#("      " 0 6 (fontified nil ws-butler-chg chg)) . -633) (#("    " 0 4 (ws-butler-chg chg fontified t)) . -626) (#("    " 0 4 (ws-butler-chg chg fontified t)) . -589) (#("    " 0 4 (ws-butler-chg chg fontified t)) . -559) (#("    " 0 4 (ws-butler-chg chg fontified t)) . -540) (#("      " 0 6 (ws-butler-chg chg fontified t)) . -528) (1349 . 1357) (#("  " 0 2 (fontified t)) . 1349) (1328 . 1338) (#("    " 0 4 (fontified t)) . 1328) (1310 . 1320) (#("    " 0 4 (fontified t)) . 1310) (1281 . 1291) (#("    " 0 4 (fontified t)) . 1281) (1251 . 1261) (#("    " 0 4 (fontified t)) . 1251) (1222 . 1232) (#("    " 0 4 (fontified t)) . 1222) (1200 . 1210) (#("    " 0 4 (fontified t)) . 1200) (1165 . 1175) (#("    " 0 4 (fontified t)) . 1165) (1143 . 1153) (#("    " 0 4 (fontified t)) . 1143) (1121 . 1131) (#("    " 0 4 (fontified t)) . 1121) (1103 . 1113) (#("    " 0 4 (fontified t)) . 1103) (1085 . 1095) (#("    " 0 4 (fontified t)) . 1085) (1066 . 1076) (#("    " 0 4 (fontified t)) . 1066) (1049 . 1059) (#("    " 0 4 (fontified t)) . 1049) (995 . 1005) (#("    " 0 4 (fontified t)) . 995) (979 . 989) (#("    " 0 4 (fontified t)) . 979) (965 . 975) (#("    " 0 4 (fontified t)) . 965) (950 . 960) (#("    " 0 4 (fontified t)) . 950) (934 . 944) (#("    " 0 4 (fontified t)) . 934) (undo-tree-id646 . -4) (undo-tree-id647 . -4) (918 . 928) (#("    " 0 4 (fontified t)) . 918) (900 . 910) (#("    " 0 4 (fontified t)) . 900) (887 . 897) (#("    " 0 4 (fontified t)) . 887) (undo-tree-id648 . -4) (undo-tree-id649 . -4) (872 . 882) (#("    " 0 4 (fontified t)) . 872) (858 . 868) (#("    " 0 4 (fontified t)) . 858) (827 . 837) (#("    " 0 4 (fontified t)) . 827) (812 . 822) (#("    " 0 4 (fontified t)) . 812) (undo-tree-id650 . -4) (795 . 805) (#("    " 0 4 (fontified t)) . 795) (778 . 788) (#("    " 0 4 (fontified t)) . 778) (undo-tree-id651 . -4) (763 . 773) (#("    " 0 4 (fontified t)) . 763) (748 . 758) (#("    " 0 4 (fontified t)) . 748) (730 . 740) (#("    " 0 4 (fontified t)) . 730) (690 . 700) (#("    " 0 4 (fontified t)) . 690) (653 . 661) (#("  " 0 2 (fontified t)) . 653) (nil rear-nonsticky nil 650 . 651) (nil fontified nil 650 . 651) (nil fontified nil 649 . 650) (nil fontified nil 648 . 649) (nil fontified nil 641 . 648) (nil fontified nil 640 . 641) (nil fontified nil 639 . 640) (nil fontified nil 620 . 639) (nil fontified nil 619 . 620) (nil fontified nil 618 . 619) (nil fontified nil 617 . 618) (nil fontified nil 616 . 617) (nil fontified nil 607 . 616) (nil fontified nil 598 . 607) (nil fontified nil 597 . 598) (nil fontified nil 596 . 597) (nil fontified nil 586 . 596) (nil fontified nil 585 . 586) (nil fontified nil 584 . 585) (nil fontified nil 583 . 584) (nil fontified nil 581 . 583) (nil fontified nil 573 . 581) (nil fontified nil 564 . 573) (nil fontified nil 563 . 564) (nil fontified nil 559 . 563) (nil fontified nil 558 . 559) (nil fontified nil 557 . 558) (nil fontified nil 556 . 557) (nil fontified nil 550 . 556) (nil fontified nil 541 . 550) (nil fontified nil 540 . 541) (nil fontified nil 539 . 540) (nil fontified nil 538 . 539) (nil fontified nil 537 . 538) (nil fontified nil 534 . 537) (nil fontified nil 528 . 534) (528 . 651)) nil (25401 4813 130094 378000) 0 nil])
([nil nil ((528 . 538)) nil (25401 4813 130081 653000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t ws-butler-chg chg face (tree-sitter-hl-face:property tree-sitter-hl-face:variable))) . -535) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg face (tree-sitter-hl-face:property tree-sitter-hl-face:variable))) . -536) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (#("." 0 1 (fontified t ws-butler-chg chg face (tree-sitter-hl-face:property tree-sitter-hl-face:punctuation\.delimiter))) . -537) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) 538) nil (25401 4813 130080 553000) 0 nil])
([nil nil ((535 . 537)) nil (25401 4813 130066 859000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t rear-nonsticky t)) . -637) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) 638) nil (25401 4813 130066 59000) 0 nil])
([nil nil ((#("git" 0 1 (fontified t ws-butler-chg delete face (tree-sitter-hl-face:variable tree-sitter-hl-face:property)) 1 3 (fontified t face (tree-sitter-hl-face:variable tree-sitter-hl-face:property))) . 794) (undo-tree-id614 . -3) (undo-tree-id615 . -3)) nil (25401 4813 130061 644000) 0 nil])
([nil nil ((#("    " 0 1 (fontified nil ws-butler-chg delete) 1 4 (fontified nil ws-butler-chg chg)) . 789) (undo-tree-id606 . -4) (undo-tree-id607 . -4) (undo-tree-id608 . -4) (undo-tree-id609 . -4) (undo-tree-id610 . -4) (#("
" 0 1 (fontified t)) . -789) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) 794) nil (25401 4910 666085 199000) 0 nil])
([nil nil ((apply -10 526 649 undo--wrap-and-run-primitive-undo 526 649 ((643 . 645) (602 . 604) (570 . 572) (549 . 551) (528 . 530) 638))) nil (25401 4915 833511 487000) 0 nil] [nil nil ((apply -10 526 648 undo--wrap-and-run-primitive-undo 526 648 ((643 . 645) (602 . 604) (570 . 572) (549 . 551) (528 . 530) 526)) (t 25401 4813 137135 775000)) ((apply 10 526 638 undo--wrap-and-run-primitive-undo 526 638 ((#("# " 0 2 (fontified t face tree-sitter-hl-face:comment)) . 528) (#("# " 0 1 (fontified t face tree-sitter-hl-face:comment) 1 2 (fontified t face tree-sitter-hl-face:comment)) . 549) (#("# " 0 1 (fontified t face tree-sitter-hl-face:comment) 1 2 (fontified t face tree-sitter-hl-face:comment)) . 570) (#("# " 0 1 (fontified t face tree-sitter-hl-face:comment) 1 2 (fontified t face tree-sitter-hl-face:comment)) . 602) (#("# " 0 1 (fontified t face tree-sitter-hl-face:comment) 1 2 (fontified t face tree-sitter-hl-face:comment)) . 643) 526))) (25401 4909 514924 348000) 0 nil])
([nil nil ((799 . 804)) nil (25401 4915 833510 587000) 0 nil])
([nil nil ((526 . 527)) ((#("x" 0 1 (fontified t ws-butler-chg chg face (tree-sitter-hl-face:property tree-sitter-hl-face:variable))) . 526) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1)) (25401 4908 822919 598000) 0 nil])
([nil nil ((804 . 805)) nil (25401 4915 833509 817000) 0 nil])
([nil nil ((660 . 664) (#("  " 0 2 (fontified t)) . 660) (650 . 654) (#("  " 0 2 (fontified t ws-butler-chg chg)) . 650) (607 . 611) (#("  " 0 2 (fontified t ws-butler-chg chg)) . 607) (573 . 577) (#("  " 0 2 (fontified t ws-butler-chg chg)) . 573) (550 . 554) (#("  " 0 2 (fontified t ws-butler-chg chg)) . 550) (526 . 528) 527) ((#("  " 0 2 (fontified t)) . 526) (undo-tree-id665 . -2) (undo-tree-id666 . -2) (undo-tree-id667 . -2) (undo-tree-id668 . -2) (550 . 552) (#("    " 0 2 (fontified t) 2 4 (fontified t ws-butler-chg chg)) . 550) (573 . 575) (#("    " 0 2 (fontified t) 2 4 (fontified t ws-butler-chg chg)) . 573) (607 . 609) (#("    " 0 2 (fontified t) 2 4 (fontified t ws-butler-chg chg)) . 607) (650 . 652) (#("    " 0 2 (fontified t) 2 4 (fontified t ws-butler-chg chg)) . 650) (660 . 662) (#("    " 0 2 (fontified t) 2 4 (fontified t ws-butler-chg chg)) . 660)) (25401 4908 407267 120000) 0 nil])
([nil nil ((805 . 807)) nil (25401 4962 51206 475000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t ws-butler-chg chg)) . -653) (#("  " 0 2 (fontified t ws-butler-chg chg)) . -645) (#("  " 0 2 (fontified t ws-butler-chg chg)) . -604) (#("  " 0 2 (fontified t ws-butler-chg chg)) . -572) (#("  " 0 2 (fontified t ws-butler-chg chg)) . -551) (#("x" 0 1 (fontified t ws-butler-chg chg face (tree-sitter-hl-face:property tree-sitter-hl-face:variable))) . -528) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) 529) ((528 . 529) (551 . 553) (572 . 574) (604 . 606) (645 . 647) (653 . 655) (t 25401 4908 110573 677000)) (25401 4908 98816 496000) 0 nil])
([nil nil ((#("    gcc" 0 4 (fontified t) 4 5 (fontified t face (tree-sitter-hl-face:variable tree-sitter-hl-face:property)) 5 7 (fontified t face (tree-sitter-hl-face:variable tree-sitter-hl-face:property))) . 865) (undo-tree-id727 . -4) (undo-tree-id728 . -4) (undo-tree-id729 . -4) (undo-tree-id730 . -4) (undo-tree-id731 . -4) (undo-tree-id732 . -4) (undo-tree-id733 . -4) (undo-tree-id734 . -4) (undo-tree-id735 . -4) (undo-tree-id736 . -4) (undo-tree-id737 . -7)) nil (25401 4968 934780 758000) 0 nil] [nil nil ((apply -14 856 980 undo--wrap-and-run-primitive-undo 856 980 ((971 . 973) (956 . 958) (943 . 945) (893 . 895) (881 . 883) (871 . 873) (860 . 862) 856)) (t 25401 4915 838860 618000)) ((apply 14 856 966 undo--wrap-and-run-primitive-undo 856 966 ((#("# " 0 2 (fontified t face tree-sitter-hl-face:comment)) . 860) (#("# " 0 1 (fontified t face tree-sitter-hl-face:comment) 1 2 (fontified t face tree-sitter-hl-face:comment)) . 871) (#<marker at 526 in home.nix> . -2) (#<marker at 846 in home.nix> . -1) (#<marker at 846 in home.nix> . -1) (#<marker at 846 in home.nix> . -2) (#<marker at 846 in home.nix> . -2) (#<marker at 846 in home.nix> . -1) (#<marker at 846 in home.nix> . -1) (#<marker at 846 in home.nix> . -2) (#<marker at 846 in home.nix> . -2) (#<marker at 846 in home.nix> . -2) (#("# " 0 2 (fontified t face tree-sitter-hl-face:comment)) . 881) (#("# " 0 2 (fontified t face tree-sitter-hl-face:comment)) . 893) (#("# " 0 2 (fontified t face tree-sitter-hl-face:comment)) . 943) (#("# " 0 2 (fontified t face tree-sitter-hl-face:comment)) . 956) (#("# " 0 2 (fontified t face tree-sitter-hl-face:comment)) . 971) 873)) (t 25401 4939 991733 685000)) (25401 4961 923106 786000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . -864) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) 865) nil (25401 4968 934772 270000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face tree-sitter-hl-face:comment)) . -871) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (#(" " 0 1 (fontified t face tree-sitter-hl-face:comment)) . -872) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) 873 (t 25401 4939 991733 685000)) ((872 . 873) (nil ws-butler-chg delete 872 . 873) (871 . 872)) (25401 4961 922610 765000) 0 nil])
([nil nil ((#("    git" 0 4 (fontified t) 4 7 (fontified t face (tree-sitter-hl-face:variable tree-sitter-hl-face:property))) . 800) (undo-tree-id704 . -7) (undo-tree-id705 . -7) (undo-tree-id706 . -7) (undo-tree-id707 . -7)) nil (25401 4968 934760 720000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . -799) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) 800) nil (25401 4968 934755 942000) 0 nil])
([nil current ((apply 10 526 637 undo--wrap-and-run-primitive-undo 526 637 ((#("# " 0 2 (fontified t face tree-sitter-hl-face:comment)) . -635) (#("# " 0 2 (fontified t face tree-sitter-hl-face:comment)) . -596) (#("# " 0 2 (fontified t face tree-sitter-hl-face:comment)) . -566) (#("# " 0 2 (fontified t face tree-sitter-hl-face:comment)) . -547) (#("# " 0 2 (fontified t face tree-sitter-hl-face:comment)) . -528) 526))) nil (25401 4968 934730 519000) 0 nil])
nil
